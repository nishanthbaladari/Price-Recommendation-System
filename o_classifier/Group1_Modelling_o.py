{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNsgWlK8nyfdLLtzB3jv3vY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XGuJL6wKwOH8","executionInfo":{"status":"ok","timestamp":1713654308975,"user_tz":300,"elapsed":21353,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}},"outputId":"ac9cd819-623b-449e-a20f-de66bdd3f112"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"]},{"cell_type":"code","source":["file_path = \"/content/drive/MyDrive/G1/dataset_o1.csv\"\n"],"metadata":{"id":"rBjHIQFHwYmW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# Load the dataset\n","data = pd.read_csv(file_path, header=None)"],"metadata":{"id":"KFTV8e57zOIn","executionInfo":{"status":"ok","timestamp":1713655266639,"user_tz":300,"elapsed":145,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"4z7lRmUwzFAD","executionInfo":{"status":"ok","timestamp":1713655268213,"user_tz":300,"elapsed":114,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}},"outputId":"efe92328-fe7e-463f-b671-1d973f41bbc2"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    0         1         2         3         4         5         6         7  \\\n","0  o7  1.935095  0.004057  0.000911  0.009461  0.980706  0.040056  0.911586   \n","1  o6  1.043522  1.069688  0.003257  0.874980  0.018232  0.793619  0.014505   \n","2  o1  1.982882  0.005086  0.007999  0.007511  0.041856  0.044497  0.021360   \n","3  o8  1.159088  1.082982  0.187376  0.701987  0.059230  0.078966  0.107336   \n","4  o8  1.075793  0.956838  0.273148  0.765146  0.053686  0.073463  0.000741   \n","\n","          8  \n","0  0.014795  \n","1  0.079663  \n","2  0.032938  \n","3  0.017487  \n","4  0.013898  "],"text/html":["\n","  <div id=\"df-96730abd-74e8-4cf5-b446-4640a0bcaa3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>o7</td>\n","      <td>1.935095</td>\n","      <td>0.004057</td>\n","      <td>0.000911</td>\n","      <td>0.009461</td>\n","      <td>0.980706</td>\n","      <td>0.040056</td>\n","      <td>0.911586</td>\n","      <td>0.014795</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>o6</td>\n","      <td>1.043522</td>\n","      <td>1.069688</td>\n","      <td>0.003257</td>\n","      <td>0.874980</td>\n","      <td>0.018232</td>\n","      <td>0.793619</td>\n","      <td>0.014505</td>\n","      <td>0.079663</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>o1</td>\n","      <td>1.982882</td>\n","      <td>0.005086</td>\n","      <td>0.007999</td>\n","      <td>0.007511</td>\n","      <td>0.041856</td>\n","      <td>0.044497</td>\n","      <td>0.021360</td>\n","      <td>0.032938</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>o8</td>\n","      <td>1.159088</td>\n","      <td>1.082982</td>\n","      <td>0.187376</td>\n","      <td>0.701987</td>\n","      <td>0.059230</td>\n","      <td>0.078966</td>\n","      <td>0.107336</td>\n","      <td>0.017487</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>o8</td>\n","      <td>1.075793</td>\n","      <td>0.956838</td>\n","      <td>0.273148</td>\n","      <td>0.765146</td>\n","      <td>0.053686</td>\n","      <td>0.073463</td>\n","      <td>0.000741</td>\n","      <td>0.013898</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96730abd-74e8-4cf5-b446-4640a0bcaa3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-96730abd-74e8-4cf5-b446-4640a0bcaa3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-96730abd-74e8-4cf5-b446-4640a0bcaa3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8fdb8d2e-9943-4cf0-a34f-7293da1ff2ee\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8fdb8d2e-9943-4cf0-a34f-7293da1ff2ee')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8fdb8d2e-9943-4cf0-a34f-7293da1ff2ee button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"o5\",\n          \"o6\",\n          \"o0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4155606139515503,\n        \"min\": 0.6449835895179843,\n        \"max\": 2.3205047007698294,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          1.9464376724257484,\n          1.0711925595710383,\n          1.191975078475989\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.47004602467765955,\n        \"min\": 1.078932543737128e-05,\n        \"max\": 1.2771992208588667,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          0.0162642309838941,\n          0.931542739004072,\n          0.0178159441890377\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3166827985033896,\n        \"min\": 3.0108760984561807e-05,\n        \"max\": 1.227318340873515,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          0.008085106574052,\n          0.2496589065846122,\n          0.0025020503050584\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2925912665613259,\n        \"min\": 4.939151818967656e-05,\n        \"max\": 0.8915850461914738,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          0.0037775269368947,\n          0.0152012037400449,\n          0.0095477941755093\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4562668836095052,\n        \"min\": 7.626651451135227e-05,\n        \"max\": 1.26592133654728,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          0.0358564630531183,\n          0.0530158912474781,\n          0.0437735100382653\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3823695215603229,\n        \"min\": 0.0001134744962975,\n        \"max\": 1.3227276268809685,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          0.0265927914936736,\n          0.0293656599838383,\n          0.932509908806936\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4878018667803553,\n        \"min\": 3.241853384260457e-05,\n        \"max\": 1.2798138950534883,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          0.1183996986619092,\n          0.9382081435542752,\n          0.8751360405475781\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3059815867475651,\n        \"min\": 9.041683226327248e-05,\n        \"max\": 1.2488085483168196,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          0.0175779255420505,\n          0.0141595789100428,\n          0.0347978588176081\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.svm import SVC\n","import joblib\n","\n","\n","# Replace column names with more descriptive names\n","data.columns = ['ID', 'Feature_1', 'Feature_2', 'Feature_3', 'Feature_4', 'Feature_5', 'Feature_6', 'Feature_7', 'Feature_8']\n","\n","# Prepare the data\n","X = data.iloc[:, 1:].values\n","y = data['ID'].values\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=42)\n","\n","# Train an SVM model\n","clf = SVC(random_state=56)\n","clf.fit(X_train, y_train)\n","\n","# Save the trained model to a file\n","model_path = \"/content/drive/My Drive/G1/o_classifier/artifacts/svm_model_o1.pkl\"\n","joblib.dump(clf, model_path)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LbVfaVpPwcPL","executionInfo":{"status":"ok","timestamp":1713655323501,"user_tz":300,"elapsed":138,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}},"outputId":"bd4138fc-da10-4689-a9c0-c2c6c8117097"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/drive/My Drive/G1/o_classifier/artifacts/svm_model_o1.pkl']"]},"metadata":{},"execution_count":21}]}]}