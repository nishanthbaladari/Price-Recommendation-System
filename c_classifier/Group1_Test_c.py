{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNpXrmmI9D3mMu7eei/afGM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a9gSDvl4ruFg","executionInfo":{"status":"ok","timestamp":1713656858472,"user_tz":300,"elapsed":22284,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}},"outputId":"83646199-99b0-4713-8a2d-53285c049612"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["csv_files_path = \"/content/drive/MyDrive/G1/1/c*.csv\"\n"],"metadata":{"id":"R2pTfbxLrzpp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_path = \"/content/drive/My Drive/G1/c_classifier/artifacts/logistic_model.pkl\""],"metadata":{"id":"VVPXT59dr4hF","executionInfo":{"status":"ok","timestamp":1713657728560,"user_tz":300,"elapsed":168,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zafjkE-frp5z","executionInfo":{"status":"ok","timestamp":1713657827999,"user_tz":300,"elapsed":45001,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}},"outputId":"24687a5d-2180-4872-e148-14faacc99986"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 83.69%\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import glob\n","import joblib\n","from sklearn.metrics import accuracy_score\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","\n","\n","# Load the dataset\n","data = pd.concat([pd.read_csv(file, names=['class', 'value']) for file in glob.glob(csv_files_path)], ignore_index=True)\n","\n","# Load the trained logistic regression model\n","logistic_model = joblib.load(model_path)\n","\n","# Classification function\n","def classify_c(values_vector):\n","    output_vector = []\n","    for value in values_vector:\n","        value_2d = np.array(value).reshape(1, -1)\n","        class_label = logistic_model.predict(value_2d)[0]\n","        output_vector.append(class_label)\n","    return output_vector\n","\n","# Evaluate the model on the test set\n","y_pred = classify_c(data['value'])\n","\n","# Calculate and print the accuracy\n","accuracy = accuracy_score(data['class'], y_pred) * 100\n","print(f\"Accuracy: {accuracy:.2f}%\")"]}]}