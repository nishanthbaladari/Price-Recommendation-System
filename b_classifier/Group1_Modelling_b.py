{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1hn7TWoXClo6kNb9TYECbI6NSc2DNfbAg","authorship_tag":"ABX9TyN7ITWf0gegEc5jQ5yBLQle"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HT5rRr03a_XB","executionInfo":{"status":"ok","timestamp":1713650651375,"user_tz":300,"elapsed":1062,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}},"outputId":"4187d2c9-3bd0-411f-e0df-2c2105060c9d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["file_path = \"/content/drive/MyDrive/G1/dataset_b1.csv\"\n"],"metadata":{"id":"SzvgcPvVbH3Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RiTu0xzfaAVM","executionInfo":{"status":"ok","timestamp":1713650657631,"user_tz":300,"elapsed":502,"user":{"displayName":"Prathyusha Rekapalli","userId":"13935086091395680628"}},"outputId":"e4d1b00d-6dd4-4f59-a027-d8b19ed7b2af"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/drive/My Drive/G1/b_classifier/artifacts/svm_model.pkl']"]},"metadata":{},"execution_count":9}],"source":["import pandas as pd\n","from sklearn.svm import SVC\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","\n","# Load the dataset\n","data = pd.read_csv(file_path,names = ['class', 'values'])\n","\n","# Split the data into features (X) and labels (y)\n","X = data[['values']]\n","y = data['class']\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Initialize the SVM model\n","svm_model = SVC(kernel='linear', random_state=42)\n","\n","# Train the SVM model\n","svm_model.fit(X_train, y_train)\n","\n","# Save the trained model to a file\n","import joblib\n","model_path = \"/content/drive/My Drive/G1/b_classifier/artifacts/svm_model.pkl\"\n","joblib.dump(svm_model, model_path)\n"]}]}